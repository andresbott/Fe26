version: '2'

# see https://github.com/go-task/task/tree/master/docs
vars:
  OUTPUT: "out"

tasks:

#   ## PACKR2
#   ================================
  createpackr2:
    dir: internal/fe26/
    deps: [cleanpackr2]
    env:
      GO111MODULE: "off"
    cmds:
      - packr2
      ## this is hackish workaround for absolute import issue
      - cmd: printf "// +build !skippackr \n// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT. \n// You can use the \"packr clean\" command to clean up this, \n// and any other packr generated files. \npackage fe26 \n \nimport _ \"github.com/AndresBott/Fe26/internal/fe26/packrd\"\n\n" > "fe26-packr.go"
        silent: true

  cleanpackr2:
    dir: internal/fe26/
    cmds:
      - packr2 clean
      - rm -f fe26-packr.go

#   ## Gulp based UI
#   ================================
  buildUi:
    dir: web/app/
    cmds:
      - gulp build

  cleanUI:
    dir: web/app/
    cmds:
      - gulp clean

#   ## Builds
#   ================================
  build-linux:
      deps: [createpackr2,buildUi]
      cmds:
        - mkdir -p {{.OUTPUT}}
        - GOOS=linux GOARCH=amd64 go build -o {{.OUTPUT}}/fe26-linux-amd64 cmd/fe26/*.go

  run-linux:
    deps: [buildlinux]
    dir: "{{.OUTPUT}}"
    cmds:
      - ./fe26-linux-amd64 ../

  build:
    desc: Build binaries
    deps: [createpackr2,buildUi]
    cmds:
      - mkdir -p {{.OUTPUT}}
      - GOOS=darwin GOARCH=amd64 go build -o {{.OUTPUT}}/fe26-darwin-amd64 cmd/fe26/*.go
      - GOOS=linux GOARCH=amd64 go build -o {{.OUTPUT}}/fe26-linux-amd64 cmd/fe26/*.go
      - GOOS=windows GOARCH=amd64 go build -o {{.OUTPUT}}/fe26-windows-amd64 cmd/fe26/*.go

  clean:
    desc: Clean the build stage
    deps: [cleanpackr2,cleanUI]
    cmds:
      - echo 'Clean'
      - rm -Rf {{.OUTPUT}}

  test:
    desc: Run all the go tests.
    cmds:
      - go test -race ./...

  increaseversion:
    cmds:
      - sed  -i '/Fe26Version/s/[^.]*$/'"{{.BUILD_NUMBER}}\"/" internal/fe26/constants.go
      - echo 'Next release {{.P_VERSION}}.{{.BUILD_NUMBER}}'
#      - git add internal/fe26/constants.go
#      - git commit -m "[GO TASK] Upgrade build string to {{.FULL_VERSION}}"
    silent: true
    vars:
      BUILD_NUMBER:
        sh: cat internal/fe26/constants.go | grep "Fe26Version" | grep -Po "([0-9]+)" | tail -1 | awk '/[0-9]/ { print 1+$1 }'
      P_VERSION:
        sh: cat internal/fe26/constants.go | grep "Fe26Version" | grep -Po "([0-9]+.[0-9]+.[0-9]+)" | awk '{split($0,a,"."); d=sprintf("%s.%s", a[1],a[2])} END {print d}'

